// Code generated by ent, DO NOT EDIT.

package imageofuser

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the imageofuser type in the database.
	Label = "image_of_user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldRoyalty holds the string denoting the royalty field in the database.
	FieldRoyalty = "royalty"
	// FieldIsImagePublished holds the string denoting the is_image_published field in the database.
	FieldIsImagePublished = "is_image_published"
	// EdgeImage holds the string denoting the image edge name in mutations.
	EdgeImage = "image"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// EdgeGoods holds the string denoting the goods edge name in mutations.
	EdgeGoods = "goods"
	// EdgeProductQuote holds the string denoting the product_quote edge name in mutations.
	EdgeProductQuote = "product_quote"
	// Table holds the table name of the imageofuser in the database.
	Table = "image_of_users"
	// ImageTable is the table that holds the image relation/edge.
	ImageTable = "images"
	// ImageInverseTable is the table name for the Image entity.
	// It exists in this package in order to avoid circular dependency with the "image" package.
	ImageInverseTable = "images"
	// ImageColumn is the table column denoting the image relation/edge.
	ImageColumn = "image_of_user_image"
	// UserTable is the table that holds the user relation/edge.
	UserTable = "image_of_users"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "image_of_user_user"
	// GoodsTable is the table that holds the goods relation/edge.
	GoodsTable = "image_of_users"
	// GoodsInverseTable is the table name for the Goods entity.
	// It exists in this package in order to avoid circular dependency with the "goods" package.
	GoodsInverseTable = "goods"
	// GoodsColumn is the table column denoting the goods relation/edge.
	GoodsColumn = "goods_image_of_user"
	// ProductQuoteTable is the table that holds the product_quote relation/edge.
	ProductQuoteTable = "product_quotes"
	// ProductQuoteInverseTable is the table name for the ProductQuote entity.
	// It exists in this package in order to avoid circular dependency with the "productquote" package.
	ProductQuoteInverseTable = "product_quotes"
	// ProductQuoteColumn is the table column denoting the product_quote relation/edge.
	ProductQuoteColumn = "product_quote_image_of_user"
)

// Columns holds all SQL columns for imageofuser fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldDeletedAt,
	FieldRoyalty,
	FieldIsImagePublished,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "image_of_users"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"goods_image_of_user",
	"image_of_user_user",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
	// DefaultIsImagePublished holds the default value on creation for the "is_image_published" field.
	DefaultIsImagePublished bool
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
